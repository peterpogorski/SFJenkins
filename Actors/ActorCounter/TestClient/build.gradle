apply plugin: 'java'
apply plugin: 'eclipse'

sourceSets {
  main {
	java.srcDirs = ['src']
    output.classesDir = 'out/classes'
    resources {
		srcDirs = ['src']
    }
   }
}

dependencies {
    compile fileTree(dir: '/opt/microsoft/sdk/servicefabric/java/packages/lib', include: ['*.jar'])
	compile project(':Interface')
}

clean.doFirst {
	delete "${projectDir}/out"
}

jar 
{
	manifest {
    attributes(
		'Main-Class': 'counterclient.CounterClient',
		"Class-Path": configurations.compile.collect { 'lib/' + it.getName() }.join(' '))
	}
	baseName "ActorCounterTest"
    destinationDir = file('out/lib')
}

task copyDeps<< {
        copy {
                from("/opt/microsoft/sdk/servicefabric/java/packages/lib")
                into("./out/lib/lib")
                include('*.jar')
        }
        copy {
                from("/opt/microsoft/sdk/servicefabric/java/packages/lib")
                into("./out/lib/lib")
                include('libjFabricRuntime.so')
        }
        copy {
                from("../CounterInterface/out/lib")
                into("./out/lib/lib")
                include('*.jar')
        }
}
defaultTasks 'clean', 'jar', 'copyDeps'




