apply plugin: 'java'
apply plugin: 'eclipse'

sourceSets {
  main {
	java.srcDirs = ['src']
    output.classesDir = 'out/classes'
    resources {
		srcDirs = ['src']
    }
   }
}

dependencies {
    compile fileTree(dir: "/opt/microsoft/sdk/servicefabric/java/packages/lib", include: ['*.jar'])
	compile project(':HelloWorldInterface')    
}

clean.doFirst {
    println "Cleaning"
	delete "${projectDir}/out"
}

jar 
{
	manifest {
    attributes(
		'Main-Class': 'reliableactor.test.HelloWorldTestClient',
		"Class-Path": configurations.compile.collect { 'lib/' + it.getName() }.join(' '))
	baseName "HelloWorld-test"
    destinationDir = file('./out/lib')
	}
}

task copyDeps<< {
        copy {
                from("/opt/microsoft/sdk/servicefabric/java/packages/lib")
                into("./out/lib/lib")
                include('*.jar')
        }
        copy {
                from("/opt/microsoft/sdk/servicefabric/java/packages/lib")
                into("./out/lib/lib")
                include('*.so')
        }
        copy {
                from("/opt/microsoft/sdk/servicefabric/java/packages/lib")
                into("./out/lib/lib")
                include('*.dll')
        }
        copy {
                from("../HelloWorldInterface/out/lib")
                into("./out/lib/lib")
                include('*.jar')
        }
}
   task tester(type:Exec){
        commandLine '/bin/bash','testclient.sh'
	
   } 
   task testerloop()<<{
   	
 		  (1..9).each{
  			 tasks.tester.exec()
 		  	}	
 	}	  
defaultTasks 'clean', 'jar', 'copyDeps','testerloop'
